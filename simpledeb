#!/bin/bash
# A package script modelled after Arch's PKGBUILD
set -e

SD_ROOTDIR="${PWD}"
SD_DEBIANDIR="${SD_ROOTDIR}/debian"
SD_DEBBUILD="$1"

# preinitialize some values
#pkgname=foo
#pkgver=0.99 # note: if the pkgver had been '0.99-10' then use an underscore. like '0.99_10'
pkgrel=0
pkgdesc="no package description specified"
arch="i386"
url="http://libfirm.org"
license=('Unknown')
groups=
provides=
depends=
makedepends=('build-essential')
conflicts=
replaces=
install=
build() {
	cd "$srcdir/$pkgname-$pkgver"
	./configure --prefix=/usr
	make
	make DESTDIR="${pkgdir}" install
}
package() {
	true # empty by default
}

srcdir="${PWD}/src/"
pkgdir="${PWD}/pkg/"

# now read/execute the DEBUILD file
source "${SD_DEBBUILD}"

rm -rf "${srcdir}"
mkdir -p "${srcdir}"
rm -rf "${pkgdir}"
mkdir -p "${pkgdir}"

# download stuff
for ((i=0; i < ${#source[@]} ; i++))
do
	url="${source[$i]}"
	md5="${md5sums[$i]}"
	cd "${SD_ROOTDIR}"
	wget -q -c "${url}"
	file="${url##*/}"
	md5_actual=$(md5sum "${file}" | cut -c 1-32)
	if [ "${md5}" != "${md5_actual}" ]
	then
		echo "MD5 mismatch for ${file}"
		exit 1
	fi
	cd "${srcdir}"
	tar -xf "${SD_ROOTDIR}/${file}"
done

# build and "install" everything
echo "building ..."
cd "${srcdir}"
build || $(echo "error in build"; exit 1)
package || $(echo "error in package"; exit 1)

# create a deb file
echo "make deb ..."
cd "${SD_ROOTDIR}"
# debian package version
echo "2.0" >debian-binary
rm -rf "${SD_DEBIANDIR}"
mkdir "${SD_DEBIANDIR}"
# package contents
cd "${pkgdir}"
tar -cjf "${SD_ROOTDIR}/data.tar.bz2" .
# debian package meta data
find . -type f | xargs md5sum >"${SD_DEBIANDIR}/md5sums"
cd "${SD_DEBIANDIR}"
touch postinst prerm
cat >control <<EOF
Package: $pkgname
Version: $pkgver
Architecture: ${arch}
Maintainer: SIMPLE DEB <nobody@web.net>
Depends: ${depends}
Homepage: ${url}
Installed-Size: $(du -s ${pkgdir})
Date: $(date)
Description: ${pkgdesc}
 .
 (This package was created with simpledeb)
EOF
chmod -f 0755 config postinst postrm preinst prerm || true # ignore error return code on missing files
tar -czf "${SD_ROOTDIR}/control.tar.gz" *
cd "${SD_ROOTDIR}"
ar r "${pkgname}-${pkgver}-${pkgrel}.deb" debian-binary control.tar.gz data.tar.bz2

# cleanup
rm -rf "${SD_DEBIANDIR}" "${srcdir}" "${pkgdir}"
rm debian-binary control.tar.gz data.tar.bz2
